name: "Install UV and cached"
author: "@grizz"

inputs:
  python-version:
    required: false
    default: 3.x
    type: string
outputs:
  venv-path:
    description: "Path to uv environment"
    value: ${{ steps.get-venv-path.outputs.venv-path }}

runs:
  using: "composite"
  steps:
    - name: Set up python ${{ inputs.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python-version }}

    - name: Get Python version
      shell: bash
      run: |
        echo "PYTHON_VERSION=$(python --version | awk '{ print $NF }')" >> $GITHUB_ENV

    - name: Load uv cache installation
      uses: actions/cache@v4
      with:
        path: ~/.local
        key: dotlocal-${{ runner.os }}-py${{ env.PYTHON_VERSION }}-0

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
    - name: Get virtualenv path
      shell: bash
      run: echo "VENV_PATH=$(python -c 'import sys; print(sys.prefix)')" >> $GITHUB_ENV

    - name: Get virtualenv path
      id: get-venv-path
      shell: bash
      run: |
        echo "venv-path=$(python -c 'import sys; print(sys.prefix)')" >> $GITHUB_OUTPUT
    
    - name: venv path
      shell: bash
      run: echo "got venv path ${{ steps.get-venv-path.outputs.venv-path }}"

    - name: Load cached uv installation
      id: cached-uv-venv
      uses: actions/cache@v4
      with:
        path: ${{ steps.get-venv-path.outputs.venv-path }}
        key: venv-${{ runner.os }}-py${{ hashFiles('**/uv.lock') }}

    - name: Ensure cache is healthy
      if: steps.cached-uv-venv.outputs.cache-hit == 'true'
      shell: bash
      run: timeout 10s uv run pip --version || rm -rf ${{ steps.get-venv-path.outputs.venv-path }}

    - name: Check cache and install dependencies
      shell: bash
      run: uv sync --all-extras --dev
